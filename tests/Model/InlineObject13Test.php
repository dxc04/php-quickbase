<?php
/**
 * InlineObject13Test
 *
 * PHP version 5
 *
 * @category Class
 * @package  Rossity\PhpQuickbase
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Quick Base API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Rossity\PhpQuickbase;

use PHPUnit\Framework\TestCase;

/**
 * InlineObject13Test Class Doc Comment
 *
 * @category    Class
 * @description If grouping or sorting is not set, records will not be sorted.
 * @package     Rossity\PhpQuickbase
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class InlineObject13Test extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "InlineObject13"
     */
    public function testInlineObject13()
    {
    }

    /**
     * Test attribute "options"
     */
    public function testPropertyOptions()
    {
    }

    /**
     * Test attribute "where"
     */
    public function testPropertyWhere()
    {
    }

    /**
     * Test attribute "groupBy"
     */
    public function testPropertyGroupBy()
    {
    }

    /**
     * Test attribute "sortBy"
     */
    public function testPropertySortBy()
    {
    }

    /**
     * Test attribute "select"
     */
    public function testPropertySelect()
    {
    }

    /**
     * Test attribute "from"
     */
    public function testPropertyFrom()
    {
    }
}
